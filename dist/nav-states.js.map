{
  "version": 3,
  "sources": ["../src/ResumeApplicationToast.js", "../src/nav-states.js"],
  "sourcesContent": ["// Toast behavior for directing users to their offer/in-progress application\nexport class ResumeApplicationToast {\n  static isVisible = false;\n  static prequalDomain = null;\n\n  constructor(prequalDomain = null) {\n    ResumeApplicationToast.prequalDomain = prequalDomain || this.determinePrequalDomain();\n    this.init();\n  }\n\n  determinePrequalDomain() {\n    try {\n      const hostname = window.location.hostname;\n      if (hostname.includes(\".dev\")) {\n        return \"https://get.point.dev\";\n      }\n      return \"https://get.point.com\";\n    } catch (error) {\n      Bugsnag.notify(error, {\n        severity: \"error\",\n        context: \"ResumeApplicationToast.determinePrequalDomain\",\n        metaData: {\n          hostname: window.location?.hostname,\n        },\n      });\n      // Default to production domain as fallback\n      return \"https://get.point.com\";\n    }\n  }\n\n  async init() {\n    try {\n      // Add transition styles to toasts\n      const toastContainer = document.querySelector(\"#toast\");\n      const toastMail = document.querySelector(\"#toast-mail\");\n      const toastOffer = document.querySelector(\"#toast-offer\");\n\n      if (toastContainer) {\n        Object.assign(toastContainer.style, {\n          transition: \"all 0.3s ease-in-out\",\n          opacity: \"1\",\n          height: \"3.5rem\",\n          overflow: \"hidden\",\n        });\n      }\n\n      if (toastMail) {\n        Object.assign(toastMail.style, {\n          transition: \"all 0.3s ease-in-out\",\n          opacity: \"1\",\n          transform: \"translateY(0)\",\n          display: \"flex\",\n          position: \"relative\",\n        });\n      }\n\n      if (toastOffer) {\n        Object.assign(toastOffer.style, {\n          transition: \"all 0.3s ease-in-out\",\n          opacity: \"0\",\n          transform: \"translateY(-100%)\",\n          position: \"absolute\",\n          top: \"0\",\n          left: \"0\",\n          right: \"0\",\n          display: \"flex\",\n          visibility: \"hidden\",\n        });\n      }\n\n      const data = await ResumeApplicationToast.fetchVisitorData();\n      if (data) {\n        this.updateToast(data);\n      }\n    } catch (error) {\n      Bugsnag.notify(error, {\n        severity: \"error\",\n        context: \"ResumeApplicationToast.init\",\n        metaData: {\n          prequalDomain: ResumeApplicationToast.prequalDomain,\n        },\n      });\n      console.error(\"Error initializing ResumeApplicationToast:\", error);\n    }\n  }\n\n  static async fetchVisitorData() {\n    try {\n      const url = ResumeApplicationToast.prequalDomain + \"/api/v1/visitors\";\n      const response = await fetch(url, {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      return response.json();\n    } catch (error) {\n      Bugsnag.notify(error, {\n        severity: \"error\",\n        context: \"ResumeApplicationToast.fetchVisitorData\",\n        metaData: {\n          url: ResumeApplicationToast.prequalDomain + \"/api/v1/visitors\",\n        },\n      });\n      console.error(\"Error fetching visitor data:\", error);\n      return null;\n    }\n  }\n\n  static async fetchRedirectLink() {\n    const url = ResumeApplicationToast.prequalDomain + \"/api/v2/estimates/resume\";\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      return response.json();\n    } catch (error) {\n      Bugsnag.notify(error, {\n        severity: \"error\",\n        context: \"ResumeApplicationToast.fetchRedirectLink\",\n        metaData: {\n          url: url,\n        },\n      });\n      console.error(\"Error fetching redirect link:\", error);\n      return null;\n    }\n  }\n\n  updateToast(visitor) {\n    try {\n      if (!visitor) return;\n\n      // Check for specific visitor states that should trigger the offer toast\n      const shouldShowOffer = (visitor.hasActiveDocket && !visitor.hasActiveApplicantFlow) || visitor.hasActiveDocket || visitor.estimateKey;\n\n      if (!shouldShowOffer) return;\n\n      // Find the toast elements\n      const toastContainer = document.querySelector(\"#toast\");\n\n      // Early return if toast container doesn't exist\n      if (!toastContainer) return;\n\n      const toastMail = document.querySelector(\"#toast-mail\");\n      const toastOffer = document.querySelector(\"#toast-offer\");\n\n      if (!toastOffer) return;\n\n      // Make offer toast visible but still transparent before transition\n      toastOffer.style.visibility = \"visible\";\n\n      // Smoothly transition between toasts\n      if (toastMail) {\n        toastMail.style.opacity = \"0\";\n        toastMail.style.transform = \"translateY(-100%)\";\n      }\n\n      // Show the offer toast with a slight delay to allow for the mail toast to fade out\n      setTimeout(() => {\n        if (toastOffer) {\n          toastOffer.style.opacity = \"1\";\n          toastOffer.style.transform = \"translateY(0)\";\n        }\n        // Clean up the mail toast after transition\n        if (toastMail) {\n          toastMail.style.display = \"none\";\n        }\n      }, 300);\n\n      // Update link destination for the offer toast link\n      const offerLink = toastOffer.querySelector(\"a\");\n      if (offerLink) {\n        offerLink.addEventListener(\"click\", async (e) => {\n          e.preventDefault();\n          try {\n            const response = await ResumeApplicationToast.fetchRedirectLink();\n            if (response && response.url) {\n              window.location.assign(response.url);\n            } else {\n              Bugsnag.notify(new Error(\"No redirect URL received\"), {\n                severity: \"warning\",\n                context: \"ResumeApplicationToast.updateToast.clickHandler\",\n                metaData: {\n                  response: response,\n                },\n              });\n              // Fallback to default behavior if no URL is received\n              window.location.href = offerLink.getAttribute(\"href\");\n            }\n          } catch (error) {\n            Bugsnag.notify(error, {\n              severity: \"error\",\n              context: \"ResumeApplicationToast.updateToast.clickHandler\",\n              metaData: {\n                fallbackUrl: offerLink.getAttribute(\"href\"),\n              },\n            });\n            console.error(\"Error redirecting to application:\", error);\n            // Fallback to default behavior on error\n            window.location.href = offerLink.getAttribute(\"href\");\n          }\n        });\n      }\n\n      ResumeApplicationToast.isVisible = true;\n    } catch (error) {\n      Bugsnag.notify(error, {\n        severity: \"error\",\n        context: \"ResumeApplicationToast.updateToast\",\n        metaData: {\n          visitor: visitor,\n          isVisible: ResumeApplicationToast.isVisible,\n        },\n      });\n      console.error(\"Error updating toast:\", error);\n    }\n  }\n}\n", "import { ResumeApplicationToast } from \"./ResumeApplicationToast.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // Define all the elements that will be manipulated\n  const elements = {\n    navbarComponent: document.querySelector(\".navbar_component_updated\"), // The navbar component\n    logoColorElement: document.querySelector(\".logo-color\"), // The colored logo\n    logoWhiteElement: document.querySelector(\".logo-white\"), // The white logo\n    navDropdownTrigger: document.querySelectorAll(\".nav_dropdown_trigger\"), // The dropdown triggers in the navbar\n    navbarSingleLink: document.querySelectorAll(\".navbar_single_link\"), // The single links in the navbar\n    navbarBtnPrimary: document.querySelector(\".navbar_btn[navbar-btn='primary']\"), // The primary button in the navbar\n    navbarBtnSecondary: document.querySelector(\".navbar_btn[navbar-btn='secondary']\"), // The secondary button in the navbar\n    menuIconLines: document.querySelectorAll(\".menu-icon1_line-top, .menu-icon1_line-middle, .menu-icon1_line-bottom\"), // The lines in the menu icon with white-icon class\n    navToast: document.querySelector(\".nav-toast\"), // The nav-toast element\n  };\n\n  // Check if the navbar component exists\n  if (!elements.navbarComponent) {\n    console.log(\"No Nav Found.\");\n    return;\n  }\n\n  // Get the navbar attribute from the navbar component\n  const navbarAttribute = elements.navbarComponent.getAttribute(\"navbar-default\");\n\n  // Set the navbar opacity to 1\n  elements.navbarComponent.style.opacity = \"1\";\n\n  // Function to set styles for an element\n  const setElementStyle = (element, styles) => {\n    if (element) {\n      Object.assign(element.style, styles);\n    }\n  };\n\n  // Function to add a hover effect to an element\n  const addHoverEffect = (element, hoverColor, mouseoutColor) => {\n    if (element) {\n      element.addEventListener(\"mouseover\", function () {\n        element.style.color = hoverColor;\n      });\n      element.addEventListener(\"mouseout\", function () {\n        element.style.color = mouseoutColor;\n      });\n    }\n  };\n\n  // Function to handle button hovers\n  function buttonHoverStates(element, hoverBgColor, originalBgColor) {\n    const mouseoverFunc = function () {\n      if (element) element.style.backgroundColor = hoverBgColor;\n    };\n    const mouseoutFunc = function () {\n      if (element) element.style.backgroundColor = originalBgColor;\n    };\n    if (element) {\n      element.addEventListener(\"mouseover\", mouseoverFunc);\n      element.addEventListener(\"mouseout\", mouseoutFunc);\n    }\n    return { mouseoverFunc, mouseoutFunc };\n  }\n\n  let primaryBtnHoverFuncs, secondaryBtnHoverFuncs;\n\n  // Update the navbar based on scroll position\n  function updateNavbarOnScroll() {\n    // First, remove any existing hover event listeners\n    if (primaryBtnHoverFuncs && secondaryBtnHoverFuncs) {\n      elements.navbarBtnPrimary.removeEventListener(\"mouseover\", primaryBtnHoverFuncs.mouseoverFunc);\n      elements.navbarBtnPrimary.removeEventListener(\"mouseout\", primaryBtnHoverFuncs.mouseoutFunc);\n      elements.navbarBtnSecondary.removeEventListener(\"mouseover\", secondaryBtnHoverFuncs.mouseoverFunc);\n      elements.navbarBtnSecondary.removeEventListener(\"mouseout\", secondaryBtnHoverFuncs.mouseoutFunc);\n    }\n\n    if (window.scrollY > 64 || navbarAttribute === \"filled\") {\n      // Apply styles for a scrolled-down state\n      setElementStyle(elements.navbarComponent, {\n        transition: \"background-color 0.2s linear\",\n        backgroundColor: \"#FFFFFF\",\n      });\n      setElementStyle(elements.logoColorElement, {\n        transition: \"opacity 0.2s linear\",\n        opacity: \"1\",\n      });\n      elements.navDropdownTrigger.forEach((element) => {\n        setElementStyle(element, { color: \"#444\" });\n        addHoverEffect(element, \"#016789\", \"#444\");\n      });\n      elements.navbarSingleLink.forEach((element) => {\n        if (!element.classList.contains(\"navbar_btn\")) {\n          setElementStyle(element, { color: \"#444\" });\n          addHoverEffect(element, \"#016789\", \"#444\");\n        }\n      });\n      setElementStyle(elements.navbarBtnPrimary, {\n        backgroundColor: \"#F4C65E\",\n        color: \"#444\",\n      });\n      setElementStyle(elements.navbarBtnSecondary, {\n        backgroundColor: \"#F6F7F9\",\n        color: \"#444\",\n      });\n      primaryBtnHoverFuncs = buttonHoverStates(elements.navbarBtnPrimary, \"#f1b937\", \"#F4C65D\");\n      secondaryBtnHoverFuncs = buttonHoverStates(elements.navbarBtnSecondary, \"#ebebeb\", \"#F6F7F9\");\n      elements.menuIconLines.forEach((element) => {\n        setElementStyle(element, { backgroundColor: \"#444\" });\n      });\n    } else {\n      // Apply styles for a scrolled-up state\n      setElementStyle(elements.navbarComponent, {\n        backgroundColor: \"transparent\",\n      });\n      setElementStyle(elements.logoColorElement, { opacity: \"0\" });\n      elements.navDropdownTrigger.forEach((element) => {\n        setElementStyle(element, { color: \"#FFFFFF\" });\n        addHoverEffect(element, \"#FFFFFF\", \"#FFFFFF\");\n      });\n      elements.navbarSingleLink.forEach((element) => {\n        if (!element.classList.contains(\"navbar_btn\")) {\n          setElementStyle(element, { color: \"#FFFFFF\" });\n          addHoverEffect(element, \"#FFFFFF\", \"#FFFFFF\");\n        }\n      });\n      setElementStyle(elements.navbarBtnPrimary, {\n        backgroundColor: \"transparent\",\n        color: \"#FFFFFF\",\n      });\n      setElementStyle(elements.navbarBtnSecondary, {\n        backgroundColor: \"transparent\",\n        color: \"#FFFFFF\",\n      });\n      primaryBtnHoverFuncs = buttonHoverStates(elements.navbarBtnPrimary, \"rgba(255,255,255,0.06)\", \"transparent\");\n      secondaryBtnHoverFuncs = buttonHoverStates(elements.navbarBtnSecondary, \"rgba(255,255,255,0.06)\", \"transparent\");\n      elements.menuIconLines.forEach((element) => {\n        setElementStyle(element, { backgroundColor: \"\" });\n      });\n    }\n\n    // Toast behavior\n    if (elements.navToast) {\n      if (window.scrollY > 100) {\n        elements.navToast.style.marginTop = \"-2.5rem\";\n      } else {\n        elements.navToast.style.marginTop = \"0\";\n      }\n    }\n  }\n\n  // Call the function immediately to set the initial state\n  updateNavbarOnScroll();\n\n  // Add the scroll event listener\n  window.addEventListener(\"scroll\", updateNavbarOnScroll);\n\n  // Initialize toast styles on load\n  if (elements.navToast) {\n    elements.navToast.style.opacity = \"1\";\n    elements.navToast.style.transition = \"margin-top 0.2s linear\";\n\n    // Set initial position of the toast based on the current scroll position\n    if (window.scrollY > 100) {\n      elements.navToast.style.marginTop = \"-2.5rem\";\n    } else {\n      elements.navToast.style.marginTop = \"0\";\n    }\n  }\n\n  // Initialize the ResumeApplicationToast when the page loads\n  const resumeApplicationToast = new ResumeApplicationToast();\n});\n"],
  "mappings": "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",
  "names": ["_ResumeApplicationToast", "prequalDomain", "error", "toastContainer", "toastMail", "toastOffer", "data", "url", "visitor", "offerLink", "e", "response", "__publicField", "ResumeApplicationToast", "elements", "navbarAttribute", "setElementStyle", "element", "styles", "addHoverEffect", "hoverColor", "mouseoutColor", "buttonHoverStates", "hoverBgColor", "originalBgColor", "mouseoverFunc", "mouseoutFunc", "primaryBtnHoverFuncs", "secondaryBtnHoverFuncs", "updateNavbarOnScroll", "resumeApplicationToast", "ResumeApplicationToast"]
}
